Problem sm04-2: asm/mem/free

Напишите подпрограмму free_mem, которая «освобождает» память, выделенную на куче (то есть помещает блок памяти в список свободных).

Подпрограмма free_mem принимает один параметр — адрес, который ранее вернула подпрограмма alloc_mem (см. предыдущую задачу). Соответствующий блок памяти должен быть добавлен в голову списка freelist, который должен быть определён в сдаваемом файле. Структуру списка freelist также см. в предыдущей задаче.

Подпрограмма free_mem не возвращает никакого результата. Соблюдайте стандартные соглашения о вызове (cdecl).



Problem ku01-4: kr01-4 (дореш)

Студент Миша ошибся при написании своей функции process и забыл добавить пролог. При этом с прологом его функция корректна и возвращает некоторое число. Но вот незадача - переписать его исходный код вы не можете.

Напишите программу, которая вызовет функцию int process(); ровно один раз и выведет возвращаемое число.

Функция process скомпилирована в отдельной единице трансляции и не является статичной.

Для вывода разрешается использовать функции из simpleio

Например, если Мишина функция такова:

mov $4, %eax
mov %ebp, %esp
pop %ebp
ret

то ваша программа должна вывести число 4.


___________________________
                      ^
                      esp

sub 4:
___________________________
                  ^
                  esp

push ebp:    
_____________[ebp]_________  
              ^
              esp
mov esp, ebp

add 8:
_____________[ebp]_________
                      ^
                      esp

push process:
_____________[ebp][process]______
                   ^
                   esp


mov ebp, esp:
_____________[ebp][process]______
              ^
              esp

pop ebp:
__________________[process]______
                   ^
                   esp

pop process:

_________________________________
                       ^
                       esp
